/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// Options3 struct for Options3
type Options3 struct {
	UseKerberos  *bool   `json:"use_kerberos,omitempty"`
	OutputFormat *string `json:"output_format,omitempty"`
}

// NewOptions3 instantiates a new Options3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptions3() *Options3 {
	this := Options3{}
	var useKerberos bool = false
	this.UseKerberos = &useKerberos
	var outputFormat string = "SMB"
	this.OutputFormat = &outputFormat
	return &this
}

// NewOptions3WithDefaults instantiates a new Options3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptions3WithDefaults() *Options3 {
	this := Options3{}
	var useKerberos bool = false
	this.UseKerberos = &useKerberos
	var outputFormat string = "SMB"
	this.OutputFormat = &outputFormat
	return &this
}

// GetUseKerberos returns the UseKerberos field value if set, zero value otherwise.
func (o *Options3) GetUseKerberos() bool {
	if o == nil || o.UseKerberos == nil {
		var ret bool
		return ret
	}
	return *o.UseKerberos
}

// GetUseKerberosOk returns a tuple with the UseKerberos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Options3) GetUseKerberosOk() (*bool, bool) {
	if o == nil || o.UseKerberos == nil {
		return nil, false
	}
	return o.UseKerberos, true
}

// HasUseKerberos returns a boolean if a field has been set.
func (o *Options3) HasUseKerberos() bool {
	if o != nil && o.UseKerberos != nil {
		return true
	}

	return false
}

// SetUseKerberos gets a reference to the given bool and assigns it to the UseKerberos field.
func (o *Options3) SetUseKerberos(v bool) {
	o.UseKerberos = &v
}

// GetOutputFormat returns the OutputFormat field value if set, zero value otherwise.
func (o *Options3) GetOutputFormat() string {
	if o == nil || o.OutputFormat == nil {
		var ret string
		return ret
	}
	return *o.OutputFormat
}

// GetOutputFormatOk returns a tuple with the OutputFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Options3) GetOutputFormatOk() (*string, bool) {
	if o == nil || o.OutputFormat == nil {
		return nil, false
	}
	return o.OutputFormat, true
}

// HasOutputFormat returns a boolean if a field has been set.
func (o *Options3) HasOutputFormat() bool {
	if o != nil && o.OutputFormat != nil {
		return true
	}

	return false
}

// SetOutputFormat gets a reference to the given string and assigns it to the OutputFormat field.
func (o *Options3) SetOutputFormat(v string) {
	o.OutputFormat = &v
}

func (o Options3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UseKerberos != nil {
		toSerialize["use_kerberos"] = o.UseKerberos
	}
	if o.OutputFormat != nil {
		toSerialize["output_format"] = o.OutputFormat
	}
	return json.Marshal(toSerialize)
}

type NullableOptions3 struct {
	value *Options3
	isSet bool
}

func (v NullableOptions3) Get() *Options3 {
	return v.value
}

func (v *NullableOptions3) Set(val *Options3) {
	v.value = val
	v.isSet = true
}

func (v NullableOptions3) IsSet() bool {
	return v.isSet
}

func (v *NullableOptions3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptions3(val *Options3) *NullableOptions3 {
	return &NullableOptions3{value: val, isSet: true}
}

func (v NullableOptions3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptions3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
