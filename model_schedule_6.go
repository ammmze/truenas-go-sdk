/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// Schedule6 struct for Schedule6
type Schedule6 struct {
	Hour  *string `json:"hour,omitempty"`
	Dom   *string `json:"dom,omitempty"`
	Month *string `json:"month,omitempty"`
	Dow   *string `json:"dow,omitempty"`
}

// NewSchedule6 instantiates a new Schedule6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedule6() *Schedule6 {
	this := Schedule6{}
	var hour string = "*"
	this.Hour = &hour
	var dom string = "*"
	this.Dom = &dom
	var month string = "*"
	this.Month = &month
	var dow string = "*"
	this.Dow = &dow
	return &this
}

// NewSchedule6WithDefaults instantiates a new Schedule6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedule6WithDefaults() *Schedule6 {
	this := Schedule6{}
	var hour string = "*"
	this.Hour = &hour
	var dom string = "*"
	this.Dom = &dom
	var month string = "*"
	this.Month = &month
	var dow string = "*"
	this.Dow = &dow
	return &this
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *Schedule6) GetHour() string {
	if o == nil || o.Hour == nil {
		var ret string
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule6) GetHourOk() (*string, bool) {
	if o == nil || o.Hour == nil {
		return nil, false
	}
	return o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *Schedule6) HasHour() bool {
	if o != nil && o.Hour != nil {
		return true
	}

	return false
}

// SetHour gets a reference to the given string and assigns it to the Hour field.
func (o *Schedule6) SetHour(v string) {
	o.Hour = &v
}

// GetDom returns the Dom field value if set, zero value otherwise.
func (o *Schedule6) GetDom() string {
	if o == nil || o.Dom == nil {
		var ret string
		return ret
	}
	return *o.Dom
}

// GetDomOk returns a tuple with the Dom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule6) GetDomOk() (*string, bool) {
	if o == nil || o.Dom == nil {
		return nil, false
	}
	return o.Dom, true
}

// HasDom returns a boolean if a field has been set.
func (o *Schedule6) HasDom() bool {
	if o != nil && o.Dom != nil {
		return true
	}

	return false
}

// SetDom gets a reference to the given string and assigns it to the Dom field.
func (o *Schedule6) SetDom(v string) {
	o.Dom = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *Schedule6) GetMonth() string {
	if o == nil || o.Month == nil {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule6) GetMonthOk() (*string, bool) {
	if o == nil || o.Month == nil {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *Schedule6) HasMonth() bool {
	if o != nil && o.Month != nil {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
func (o *Schedule6) SetMonth(v string) {
	o.Month = &v
}

// GetDow returns the Dow field value if set, zero value otherwise.
func (o *Schedule6) GetDow() string {
	if o == nil || o.Dow == nil {
		var ret string
		return ret
	}
	return *o.Dow
}

// GetDowOk returns a tuple with the Dow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule6) GetDowOk() (*string, bool) {
	if o == nil || o.Dow == nil {
		return nil, false
	}
	return o.Dow, true
}

// HasDow returns a boolean if a field has been set.
func (o *Schedule6) HasDow() bool {
	if o != nil && o.Dow != nil {
		return true
	}

	return false
}

// SetDow gets a reference to the given string and assigns it to the Dow field.
func (o *Schedule6) SetDow(v string) {
	o.Dow = &v
}

func (o Schedule6) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hour != nil {
		toSerialize["hour"] = o.Hour
	}
	if o.Dom != nil {
		toSerialize["dom"] = o.Dom
	}
	if o.Month != nil {
		toSerialize["month"] = o.Month
	}
	if o.Dow != nil {
		toSerialize["dow"] = o.Dow
	}
	return json.Marshal(toSerialize)
}

type NullableSchedule6 struct {
	value *Schedule6
	isSet bool
}

func (v NullableSchedule6) Get() *Schedule6 {
	return v.value
}

func (v *NullableSchedule6) Set(val *Schedule6) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedule6) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedule6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedule6(val *Schedule6) *NullableSchedule6 {
	return &NullableSchedule6{value: val, isSet: true}
}

func (v NullableSchedule6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedule6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
