/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// CtdbPrivateIpsCreate0 struct for CtdbPrivateIpsCreate0
type CtdbPrivateIpsCreate0 struct {
	Ip *string `json:"ip,omitempty"`
}

// NewCtdbPrivateIpsCreate0 instantiates a new CtdbPrivateIpsCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCtdbPrivateIpsCreate0() *CtdbPrivateIpsCreate0 {
	this := CtdbPrivateIpsCreate0{}
	return &this
}

// NewCtdbPrivateIpsCreate0WithDefaults instantiates a new CtdbPrivateIpsCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCtdbPrivateIpsCreate0WithDefaults() *CtdbPrivateIpsCreate0 {
	this := CtdbPrivateIpsCreate0{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CtdbPrivateIpsCreate0) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtdbPrivateIpsCreate0) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CtdbPrivateIpsCreate0) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CtdbPrivateIpsCreate0) SetIp(v string) {
	o.Ip = &v
}

func (o CtdbPrivateIpsCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	return json.Marshal(toSerialize)
}

type NullableCtdbPrivateIpsCreate0 struct {
	value *CtdbPrivateIpsCreate0
	isSet bool
}

func (v NullableCtdbPrivateIpsCreate0) Get() *CtdbPrivateIpsCreate0 {
	return v.value
}

func (v *NullableCtdbPrivateIpsCreate0) Set(val *CtdbPrivateIpsCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableCtdbPrivateIpsCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableCtdbPrivateIpsCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCtdbPrivateIpsCreate0(val *CtdbPrivateIpsCreate0) *NullableCtdbPrivateIpsCreate0 {
	return &NullableCtdbPrivateIpsCreate0{value: val, isSet: true}
}

func (v NullableCtdbPrivateIpsCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCtdbPrivateIpsCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
