/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// CtdbPublicIpsCreate0 struct for CtdbPublicIpsCreate0
type CtdbPublicIpsCreate0 struct {
	// `pnn` node number of record to adjust
	Pnn *int32 `json:"pnn,omitempty"`
	// `ip` string representing an IP v4/v6 address
	Ip *string `json:"ip,omitempty"`
	// `netmask` integer representing a cidr notated netmask (i.e. 16/24/48/64 etc)
	Netmask   *int32  `json:"netmask,omitempty"`
	Interface *string `json:"interface,omitempty"`
}

// NewCtdbPublicIpsCreate0 instantiates a new CtdbPublicIpsCreate0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCtdbPublicIpsCreate0() *CtdbPublicIpsCreate0 {
	this := CtdbPublicIpsCreate0{}
	return &this
}

// NewCtdbPublicIpsCreate0WithDefaults instantiates a new CtdbPublicIpsCreate0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCtdbPublicIpsCreate0WithDefaults() *CtdbPublicIpsCreate0 {
	this := CtdbPublicIpsCreate0{}
	return &this
}

// GetPnn returns the Pnn field value if set, zero value otherwise.
func (o *CtdbPublicIpsCreate0) GetPnn() int32 {
	if o == nil || o.Pnn == nil {
		var ret int32
		return ret
	}
	return *o.Pnn
}

// GetPnnOk returns a tuple with the Pnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtdbPublicIpsCreate0) GetPnnOk() (*int32, bool) {
	if o == nil || o.Pnn == nil {
		return nil, false
	}
	return o.Pnn, true
}

// HasPnn returns a boolean if a field has been set.
func (o *CtdbPublicIpsCreate0) HasPnn() bool {
	if o != nil && o.Pnn != nil {
		return true
	}

	return false
}

// SetPnn gets a reference to the given int32 and assigns it to the Pnn field.
func (o *CtdbPublicIpsCreate0) SetPnn(v int32) {
	o.Pnn = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CtdbPublicIpsCreate0) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtdbPublicIpsCreate0) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CtdbPublicIpsCreate0) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CtdbPublicIpsCreate0) SetIp(v string) {
	o.Ip = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *CtdbPublicIpsCreate0) GetNetmask() int32 {
	if o == nil || o.Netmask == nil {
		var ret int32
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtdbPublicIpsCreate0) GetNetmaskOk() (*int32, bool) {
	if o == nil || o.Netmask == nil {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *CtdbPublicIpsCreate0) HasNetmask() bool {
	if o != nil && o.Netmask != nil {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given int32 and assigns it to the Netmask field.
func (o *CtdbPublicIpsCreate0) SetNetmask(v int32) {
	o.Netmask = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *CtdbPublicIpsCreate0) GetInterface() string {
	if o == nil || o.Interface == nil {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CtdbPublicIpsCreate0) GetInterfaceOk() (*string, bool) {
	if o == nil || o.Interface == nil {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *CtdbPublicIpsCreate0) HasInterface() bool {
	if o != nil && o.Interface != nil {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *CtdbPublicIpsCreate0) SetInterface(v string) {
	o.Interface = &v
}

func (o CtdbPublicIpsCreate0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pnn != nil {
		toSerialize["pnn"] = o.Pnn
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Netmask != nil {
		toSerialize["netmask"] = o.Netmask
	}
	if o.Interface != nil {
		toSerialize["interface"] = o.Interface
	}
	return json.Marshal(toSerialize)
}

type NullableCtdbPublicIpsCreate0 struct {
	value *CtdbPublicIpsCreate0
	isSet bool
}

func (v NullableCtdbPublicIpsCreate0) Get() *CtdbPublicIpsCreate0 {
	return v.value
}

func (v *NullableCtdbPublicIpsCreate0) Set(val *CtdbPublicIpsCreate0) {
	v.value = val
	v.isSet = true
}

func (v NullableCtdbPublicIpsCreate0) IsSet() bool {
	return v.isSet
}

func (v *NullableCtdbPublicIpsCreate0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCtdbPublicIpsCreate0(val *CtdbPublicIpsCreate0) *NullableCtdbPublicIpsCreate0 {
	return &NullableCtdbPublicIpsCreate0{value: val, isSet: true}
}

func (v NullableCtdbPublicIpsCreate0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCtdbPublicIpsCreate0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
