/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// Posix1eAce struct for Posix1eAce
type Posix1eAce struct {
	Default *bool   `json:"default,omitempty"`
	Tag     *string `json:"tag,omitempty"`
	Id      *int32  `json:"id,omitempty"`
	Perms   *Perms1 `json:"perms,omitempty"`
}

// NewPosix1eAce instantiates a new Posix1eAce object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPosix1eAce() *Posix1eAce {
	this := Posix1eAce{}
	var default_ bool = false
	this.Default = &default_
	var id int32 = -1
	this.Id = &id
	return &this
}

// NewPosix1eAceWithDefaults instantiates a new Posix1eAce object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPosix1eAceWithDefaults() *Posix1eAce {
	this := Posix1eAce{}
	var default_ bool = false
	this.Default = &default_
	var id int32 = -1
	this.Id = &id
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *Posix1eAce) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Posix1eAce) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *Posix1eAce) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *Posix1eAce) SetDefault(v bool) {
	o.Default = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *Posix1eAce) GetTag() string {
	if o == nil || o.Tag == nil {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Posix1eAce) GetTagOk() (*string, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *Posix1eAce) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *Posix1eAce) SetTag(v string) {
	o.Tag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Posix1eAce) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Posix1eAce) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Posix1eAce) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Posix1eAce) SetId(v int32) {
	o.Id = &v
}

// GetPerms returns the Perms field value if set, zero value otherwise.
func (o *Posix1eAce) GetPerms() Perms1 {
	if o == nil || o.Perms == nil {
		var ret Perms1
		return ret
	}
	return *o.Perms
}

// GetPermsOk returns a tuple with the Perms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Posix1eAce) GetPermsOk() (*Perms1, bool) {
	if o == nil || o.Perms == nil {
		return nil, false
	}
	return o.Perms, true
}

// HasPerms returns a boolean if a field has been set.
func (o *Posix1eAce) HasPerms() bool {
	if o != nil && o.Perms != nil {
		return true
	}

	return false
}

// SetPerms gets a reference to the given Perms1 and assigns it to the Perms field.
func (o *Posix1eAce) SetPerms(v Perms1) {
	o.Perms = &v
}

func (o Posix1eAce) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Perms != nil {
		toSerialize["perms"] = o.Perms
	}
	return json.Marshal(toSerialize)
}

type NullablePosix1eAce struct {
	value *Posix1eAce
	isSet bool
}

func (v NullablePosix1eAce) Get() *Posix1eAce {
	return v.value
}

func (v *NullablePosix1eAce) Set(val *Posix1eAce) {
	v.value = val
	v.isSet = true
}

func (v NullablePosix1eAce) IsSet() bool {
	return v.isSet
}

func (v *NullablePosix1eAce) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePosix1eAce(val *Posix1eAce) *NullablePosix1eAce {
	return &NullablePosix1eAce{value: val, isSet: true}
}

func (v NullablePosix1eAce) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePosix1eAce) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
