/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// InterfaceVirtualAlias struct for InterfaceVirtualAlias
type InterfaceVirtualAlias struct {
	Type    *string `json:"type,omitempty"`
	Address *string `json:"address,omitempty"`
}

// NewInterfaceVirtualAlias instantiates a new InterfaceVirtualAlias object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceVirtualAlias() *InterfaceVirtualAlias {
	this := InterfaceVirtualAlias{}
	var type_ string = "INET"
	this.Type = &type_
	return &this
}

// NewInterfaceVirtualAliasWithDefaults instantiates a new InterfaceVirtualAlias object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceVirtualAliasWithDefaults() *InterfaceVirtualAlias {
	this := InterfaceVirtualAlias{}
	var type_ string = "INET"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InterfaceVirtualAlias) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceVirtualAlias) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InterfaceVirtualAlias) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InterfaceVirtualAlias) SetType(v string) {
	o.Type = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *InterfaceVirtualAlias) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceVirtualAlias) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *InterfaceVirtualAlias) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *InterfaceVirtualAlias) SetAddress(v string) {
	o.Address = &v
}

func (o InterfaceVirtualAlias) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableInterfaceVirtualAlias struct {
	value *InterfaceVirtualAlias
	isSet bool
}

func (v NullableInterfaceVirtualAlias) Get() *InterfaceVirtualAlias {
	return v.value
}

func (v *NullableInterfaceVirtualAlias) Set(val *InterfaceVirtualAlias) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceVirtualAlias) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceVirtualAlias) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceVirtualAlias(val *InterfaceVirtualAlias) *NullableInterfaceVirtualAlias {
	return &NullableInterfaceVirtualAlias{value: val, isSet: true}
}

func (v NullableInterfaceVirtualAlias) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceVirtualAlias) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
