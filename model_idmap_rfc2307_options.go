/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// IdmapRfc2307Options struct for IdmapRfc2307Options
type IdmapRfc2307Options struct {
	LdapServer           *string `json:"ldap_server,omitempty"`
	LdapRealm            *bool   `json:"ldap_realm,omitempty"`
	BindPathUser         *string `json:"bind_path_user,omitempty"`
	BindPathGroup        *string `json:"bind_path_group,omitempty"`
	UserCn               *bool   `json:"user_cn,omitempty"`
	CnRealm              *string `json:"cn_realm,omitempty"`
	LdapDomain           *string `json:"ldap_domain,omitempty"`
	LdapUrl              *string `json:"ldap_url,omitempty"`
	LdapUserDn           *string `json:"ldap_user_dn,omitempty"`
	LdapUserDnPassword   *string `json:"ldap_user_dn_password,omitempty"`
	Ssl                  *string `json:"ssl,omitempty"`
	ValidateCertificates *bool   `json:"validate_certificates,omitempty"`
}

// NewIdmapRfc2307Options instantiates a new IdmapRfc2307Options object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdmapRfc2307Options() *IdmapRfc2307Options {
	this := IdmapRfc2307Options{}
	var ldapRealm bool = false
	this.LdapRealm = &ldapRealm
	var userCn bool = false
	this.UserCn = &userCn
	var ssl string = "true"
	this.Ssl = &ssl
	var validateCertificates bool = true
	this.ValidateCertificates = &validateCertificates
	return &this
}

// NewIdmapRfc2307OptionsWithDefaults instantiates a new IdmapRfc2307Options object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdmapRfc2307OptionsWithDefaults() *IdmapRfc2307Options {
	this := IdmapRfc2307Options{}
	var ldapRealm bool = false
	this.LdapRealm = &ldapRealm
	var userCn bool = false
	this.UserCn = &userCn
	var ssl string = "true"
	this.Ssl = &ssl
	var validateCertificates bool = true
	this.ValidateCertificates = &validateCertificates
	return &this
}

// GetLdapServer returns the LdapServer field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapServer() string {
	if o == nil || o.LdapServer == nil {
		var ret string
		return ret
	}
	return *o.LdapServer
}

// GetLdapServerOk returns a tuple with the LdapServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapServerOk() (*string, bool) {
	if o == nil || o.LdapServer == nil {
		return nil, false
	}
	return o.LdapServer, true
}

// HasLdapServer returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapServer() bool {
	if o != nil && o.LdapServer != nil {
		return true
	}

	return false
}

// SetLdapServer gets a reference to the given string and assigns it to the LdapServer field.
func (o *IdmapRfc2307Options) SetLdapServer(v string) {
	o.LdapServer = &v
}

// GetLdapRealm returns the LdapRealm field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapRealm() bool {
	if o == nil || o.LdapRealm == nil {
		var ret bool
		return ret
	}
	return *o.LdapRealm
}

// GetLdapRealmOk returns a tuple with the LdapRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapRealmOk() (*bool, bool) {
	if o == nil || o.LdapRealm == nil {
		return nil, false
	}
	return o.LdapRealm, true
}

// HasLdapRealm returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapRealm() bool {
	if o != nil && o.LdapRealm != nil {
		return true
	}

	return false
}

// SetLdapRealm gets a reference to the given bool and assigns it to the LdapRealm field.
func (o *IdmapRfc2307Options) SetLdapRealm(v bool) {
	o.LdapRealm = &v
}

// GetBindPathUser returns the BindPathUser field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetBindPathUser() string {
	if o == nil || o.BindPathUser == nil {
		var ret string
		return ret
	}
	return *o.BindPathUser
}

// GetBindPathUserOk returns a tuple with the BindPathUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetBindPathUserOk() (*string, bool) {
	if o == nil || o.BindPathUser == nil {
		return nil, false
	}
	return o.BindPathUser, true
}

// HasBindPathUser returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasBindPathUser() bool {
	if o != nil && o.BindPathUser != nil {
		return true
	}

	return false
}

// SetBindPathUser gets a reference to the given string and assigns it to the BindPathUser field.
func (o *IdmapRfc2307Options) SetBindPathUser(v string) {
	o.BindPathUser = &v
}

// GetBindPathGroup returns the BindPathGroup field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetBindPathGroup() string {
	if o == nil || o.BindPathGroup == nil {
		var ret string
		return ret
	}
	return *o.BindPathGroup
}

// GetBindPathGroupOk returns a tuple with the BindPathGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetBindPathGroupOk() (*string, bool) {
	if o == nil || o.BindPathGroup == nil {
		return nil, false
	}
	return o.BindPathGroup, true
}

// HasBindPathGroup returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasBindPathGroup() bool {
	if o != nil && o.BindPathGroup != nil {
		return true
	}

	return false
}

// SetBindPathGroup gets a reference to the given string and assigns it to the BindPathGroup field.
func (o *IdmapRfc2307Options) SetBindPathGroup(v string) {
	o.BindPathGroup = &v
}

// GetUserCn returns the UserCn field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetUserCn() bool {
	if o == nil || o.UserCn == nil {
		var ret bool
		return ret
	}
	return *o.UserCn
}

// GetUserCnOk returns a tuple with the UserCn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetUserCnOk() (*bool, bool) {
	if o == nil || o.UserCn == nil {
		return nil, false
	}
	return o.UserCn, true
}

// HasUserCn returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasUserCn() bool {
	if o != nil && o.UserCn != nil {
		return true
	}

	return false
}

// SetUserCn gets a reference to the given bool and assigns it to the UserCn field.
func (o *IdmapRfc2307Options) SetUserCn(v bool) {
	o.UserCn = &v
}

// GetCnRealm returns the CnRealm field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetCnRealm() string {
	if o == nil || o.CnRealm == nil {
		var ret string
		return ret
	}
	return *o.CnRealm
}

// GetCnRealmOk returns a tuple with the CnRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetCnRealmOk() (*string, bool) {
	if o == nil || o.CnRealm == nil {
		return nil, false
	}
	return o.CnRealm, true
}

// HasCnRealm returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasCnRealm() bool {
	if o != nil && o.CnRealm != nil {
		return true
	}

	return false
}

// SetCnRealm gets a reference to the given string and assigns it to the CnRealm field.
func (o *IdmapRfc2307Options) SetCnRealm(v string) {
	o.CnRealm = &v
}

// GetLdapDomain returns the LdapDomain field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapDomain() string {
	if o == nil || o.LdapDomain == nil {
		var ret string
		return ret
	}
	return *o.LdapDomain
}

// GetLdapDomainOk returns a tuple with the LdapDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapDomainOk() (*string, bool) {
	if o == nil || o.LdapDomain == nil {
		return nil, false
	}
	return o.LdapDomain, true
}

// HasLdapDomain returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapDomain() bool {
	if o != nil && o.LdapDomain != nil {
		return true
	}

	return false
}

// SetLdapDomain gets a reference to the given string and assigns it to the LdapDomain field.
func (o *IdmapRfc2307Options) SetLdapDomain(v string) {
	o.LdapDomain = &v
}

// GetLdapUrl returns the LdapUrl field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapUrl() string {
	if o == nil || o.LdapUrl == nil {
		var ret string
		return ret
	}
	return *o.LdapUrl
}

// GetLdapUrlOk returns a tuple with the LdapUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapUrlOk() (*string, bool) {
	if o == nil || o.LdapUrl == nil {
		return nil, false
	}
	return o.LdapUrl, true
}

// HasLdapUrl returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapUrl() bool {
	if o != nil && o.LdapUrl != nil {
		return true
	}

	return false
}

// SetLdapUrl gets a reference to the given string and assigns it to the LdapUrl field.
func (o *IdmapRfc2307Options) SetLdapUrl(v string) {
	o.LdapUrl = &v
}

// GetLdapUserDn returns the LdapUserDn field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapUserDn() string {
	if o == nil || o.LdapUserDn == nil {
		var ret string
		return ret
	}
	return *o.LdapUserDn
}

// GetLdapUserDnOk returns a tuple with the LdapUserDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapUserDnOk() (*string, bool) {
	if o == nil || o.LdapUserDn == nil {
		return nil, false
	}
	return o.LdapUserDn, true
}

// HasLdapUserDn returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapUserDn() bool {
	if o != nil && o.LdapUserDn != nil {
		return true
	}

	return false
}

// SetLdapUserDn gets a reference to the given string and assigns it to the LdapUserDn field.
func (o *IdmapRfc2307Options) SetLdapUserDn(v string) {
	o.LdapUserDn = &v
}

// GetLdapUserDnPassword returns the LdapUserDnPassword field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetLdapUserDnPassword() string {
	if o == nil || o.LdapUserDnPassword == nil {
		var ret string
		return ret
	}
	return *o.LdapUserDnPassword
}

// GetLdapUserDnPasswordOk returns a tuple with the LdapUserDnPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetLdapUserDnPasswordOk() (*string, bool) {
	if o == nil || o.LdapUserDnPassword == nil {
		return nil, false
	}
	return o.LdapUserDnPassword, true
}

// HasLdapUserDnPassword returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasLdapUserDnPassword() bool {
	if o != nil && o.LdapUserDnPassword != nil {
		return true
	}

	return false
}

// SetLdapUserDnPassword gets a reference to the given string and assigns it to the LdapUserDnPassword field.
func (o *IdmapRfc2307Options) SetLdapUserDnPassword(v string) {
	o.LdapUserDnPassword = &v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetSsl() string {
	if o == nil || o.Ssl == nil {
		var ret string
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetSslOk() (*string, bool) {
	if o == nil || o.Ssl == nil {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasSsl() bool {
	if o != nil && o.Ssl != nil {
		return true
	}

	return false
}

// SetSsl gets a reference to the given string and assigns it to the Ssl field.
func (o *IdmapRfc2307Options) SetSsl(v string) {
	o.Ssl = &v
}

// GetValidateCertificates returns the ValidateCertificates field value if set, zero value otherwise.
func (o *IdmapRfc2307Options) GetValidateCertificates() bool {
	if o == nil || o.ValidateCertificates == nil {
		var ret bool
		return ret
	}
	return *o.ValidateCertificates
}

// GetValidateCertificatesOk returns a tuple with the ValidateCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRfc2307Options) GetValidateCertificatesOk() (*bool, bool) {
	if o == nil || o.ValidateCertificates == nil {
		return nil, false
	}
	return o.ValidateCertificates, true
}

// HasValidateCertificates returns a boolean if a field has been set.
func (o *IdmapRfc2307Options) HasValidateCertificates() bool {
	if o != nil && o.ValidateCertificates != nil {
		return true
	}

	return false
}

// SetValidateCertificates gets a reference to the given bool and assigns it to the ValidateCertificates field.
func (o *IdmapRfc2307Options) SetValidateCertificates(v bool) {
	o.ValidateCertificates = &v
}

func (o IdmapRfc2307Options) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdapServer != nil {
		toSerialize["ldap_server"] = o.LdapServer
	}
	if o.LdapRealm != nil {
		toSerialize["ldap_realm"] = o.LdapRealm
	}
	if o.BindPathUser != nil {
		toSerialize["bind_path_user"] = o.BindPathUser
	}
	if o.BindPathGroup != nil {
		toSerialize["bind_path_group"] = o.BindPathGroup
	}
	if o.UserCn != nil {
		toSerialize["user_cn"] = o.UserCn
	}
	if o.CnRealm != nil {
		toSerialize["cn_realm"] = o.CnRealm
	}
	if o.LdapDomain != nil {
		toSerialize["ldap_domain"] = o.LdapDomain
	}
	if o.LdapUrl != nil {
		toSerialize["ldap_url"] = o.LdapUrl
	}
	if o.LdapUserDn != nil {
		toSerialize["ldap_user_dn"] = o.LdapUserDn
	}
	if o.LdapUserDnPassword != nil {
		toSerialize["ldap_user_dn_password"] = o.LdapUserDnPassword
	}
	if o.Ssl != nil {
		toSerialize["ssl"] = o.Ssl
	}
	if o.ValidateCertificates != nil {
		toSerialize["validate_certificates"] = o.ValidateCertificates
	}
	return json.Marshal(toSerialize)
}

type NullableIdmapRfc2307Options struct {
	value *IdmapRfc2307Options
	isSet bool
}

func (v NullableIdmapRfc2307Options) Get() *IdmapRfc2307Options {
	return v.value
}

func (v *NullableIdmapRfc2307Options) Set(val *IdmapRfc2307Options) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapRfc2307Options) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapRfc2307Options) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapRfc2307Options(val *IdmapRfc2307Options) *NullableIdmapRfc2307Options {
	return &NullableIdmapRfc2307Options{value: val, isSet: true}
}

func (v NullableIdmapRfc2307Options) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapRfc2307Options) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
