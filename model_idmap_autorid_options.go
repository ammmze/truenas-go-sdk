/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// IdmapAutoridOptions struct for IdmapAutoridOptions
type IdmapAutoridOptions struct {
	Rangesize     *int32 `json:"rangesize,omitempty"`
	Readonly      *bool  `json:"readonly,omitempty"`
	IgnoreBuiltin *bool  `json:"ignore_builtin,omitempty"`
}

// NewIdmapAutoridOptions instantiates a new IdmapAutoridOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdmapAutoridOptions() *IdmapAutoridOptions {
	this := IdmapAutoridOptions{}
	var rangesize int32 = 100000
	this.Rangesize = &rangesize
	var readonly bool = false
	this.Readonly = &readonly
	var ignoreBuiltin bool = false
	this.IgnoreBuiltin = &ignoreBuiltin
	return &this
}

// NewIdmapAutoridOptionsWithDefaults instantiates a new IdmapAutoridOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdmapAutoridOptionsWithDefaults() *IdmapAutoridOptions {
	this := IdmapAutoridOptions{}
	var rangesize int32 = 100000
	this.Rangesize = &rangesize
	var readonly bool = false
	this.Readonly = &readonly
	var ignoreBuiltin bool = false
	this.IgnoreBuiltin = &ignoreBuiltin
	return &this
}

// GetRangesize returns the Rangesize field value if set, zero value otherwise.
func (o *IdmapAutoridOptions) GetRangesize() int32 {
	if o == nil || o.Rangesize == nil {
		var ret int32
		return ret
	}
	return *o.Rangesize
}

// GetRangesizeOk returns a tuple with the Rangesize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapAutoridOptions) GetRangesizeOk() (*int32, bool) {
	if o == nil || o.Rangesize == nil {
		return nil, false
	}
	return o.Rangesize, true
}

// HasRangesize returns a boolean if a field has been set.
func (o *IdmapAutoridOptions) HasRangesize() bool {
	if o != nil && o.Rangesize != nil {
		return true
	}

	return false
}

// SetRangesize gets a reference to the given int32 and assigns it to the Rangesize field.
func (o *IdmapAutoridOptions) SetRangesize(v int32) {
	o.Rangesize = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *IdmapAutoridOptions) GetReadonly() bool {
	if o == nil || o.Readonly == nil {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapAutoridOptions) GetReadonlyOk() (*bool, bool) {
	if o == nil || o.Readonly == nil {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *IdmapAutoridOptions) HasReadonly() bool {
	if o != nil && o.Readonly != nil {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *IdmapAutoridOptions) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetIgnoreBuiltin returns the IgnoreBuiltin field value if set, zero value otherwise.
func (o *IdmapAutoridOptions) GetIgnoreBuiltin() bool {
	if o == nil || o.IgnoreBuiltin == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreBuiltin
}

// GetIgnoreBuiltinOk returns a tuple with the IgnoreBuiltin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapAutoridOptions) GetIgnoreBuiltinOk() (*bool, bool) {
	if o == nil || o.IgnoreBuiltin == nil {
		return nil, false
	}
	return o.IgnoreBuiltin, true
}

// HasIgnoreBuiltin returns a boolean if a field has been set.
func (o *IdmapAutoridOptions) HasIgnoreBuiltin() bool {
	if o != nil && o.IgnoreBuiltin != nil {
		return true
	}

	return false
}

// SetIgnoreBuiltin gets a reference to the given bool and assigns it to the IgnoreBuiltin field.
func (o *IdmapAutoridOptions) SetIgnoreBuiltin(v bool) {
	o.IgnoreBuiltin = &v
}

func (o IdmapAutoridOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rangesize != nil {
		toSerialize["rangesize"] = o.Rangesize
	}
	if o.Readonly != nil {
		toSerialize["readonly"] = o.Readonly
	}
	if o.IgnoreBuiltin != nil {
		toSerialize["ignore_builtin"] = o.IgnoreBuiltin
	}
	return json.Marshal(toSerialize)
}

type NullableIdmapAutoridOptions struct {
	value *IdmapAutoridOptions
	isSet bool
}

func (v NullableIdmapAutoridOptions) Get() *IdmapAutoridOptions {
	return v.value
}

func (v *NullableIdmapAutoridOptions) Set(val *IdmapAutoridOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapAutoridOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapAutoridOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapAutoridOptions(val *IdmapAutoridOptions) *NullableIdmapAutoridOptions {
	return &NullableIdmapAutoridOptions{value: val, isSet: true}
}

func (v NullableIdmapAutoridOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapAutoridOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
