/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// GlusterVolumeReplacebrick0 struct for GlusterVolumeReplacebrick0
type GlusterVolumeReplacebrick0 struct {
	// `name` String representing name of gluster volume
	Name     *string           `json:"name,omitempty"`
	SrcBrick *SrcBrick         `json:"src_brick,omitempty"`
	NewBrick *ReplacementBrick `json:"new_brick,omitempty"`
}

// NewGlusterVolumeReplacebrick0 instantiates a new GlusterVolumeReplacebrick0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterVolumeReplacebrick0() *GlusterVolumeReplacebrick0 {
	this := GlusterVolumeReplacebrick0{}
	return &this
}

// NewGlusterVolumeReplacebrick0WithDefaults instantiates a new GlusterVolumeReplacebrick0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterVolumeReplacebrick0WithDefaults() *GlusterVolumeReplacebrick0 {
	this := GlusterVolumeReplacebrick0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterVolumeReplacebrick0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeReplacebrick0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterVolumeReplacebrick0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterVolumeReplacebrick0) SetName(v string) {
	o.Name = &v
}

// GetSrcBrick returns the SrcBrick field value if set, zero value otherwise.
func (o *GlusterVolumeReplacebrick0) GetSrcBrick() SrcBrick {
	if o == nil || o.SrcBrick == nil {
		var ret SrcBrick
		return ret
	}
	return *o.SrcBrick
}

// GetSrcBrickOk returns a tuple with the SrcBrick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeReplacebrick0) GetSrcBrickOk() (*SrcBrick, bool) {
	if o == nil || o.SrcBrick == nil {
		return nil, false
	}
	return o.SrcBrick, true
}

// HasSrcBrick returns a boolean if a field has been set.
func (o *GlusterVolumeReplacebrick0) HasSrcBrick() bool {
	if o != nil && o.SrcBrick != nil {
		return true
	}

	return false
}

// SetSrcBrick gets a reference to the given SrcBrick and assigns it to the SrcBrick field.
func (o *GlusterVolumeReplacebrick0) SetSrcBrick(v SrcBrick) {
	o.SrcBrick = &v
}

// GetNewBrick returns the NewBrick field value if set, zero value otherwise.
func (o *GlusterVolumeReplacebrick0) GetNewBrick() ReplacementBrick {
	if o == nil || o.NewBrick == nil {
		var ret ReplacementBrick
		return ret
	}
	return *o.NewBrick
}

// GetNewBrickOk returns a tuple with the NewBrick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeReplacebrick0) GetNewBrickOk() (*ReplacementBrick, bool) {
	if o == nil || o.NewBrick == nil {
		return nil, false
	}
	return o.NewBrick, true
}

// HasNewBrick returns a boolean if a field has been set.
func (o *GlusterVolumeReplacebrick0) HasNewBrick() bool {
	if o != nil && o.NewBrick != nil {
		return true
	}

	return false
}

// SetNewBrick gets a reference to the given ReplacementBrick and assigns it to the NewBrick field.
func (o *GlusterVolumeReplacebrick0) SetNewBrick(v ReplacementBrick) {
	o.NewBrick = &v
}

func (o GlusterVolumeReplacebrick0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SrcBrick != nil {
		toSerialize["src_brick"] = o.SrcBrick
	}
	if o.NewBrick != nil {
		toSerialize["new_brick"] = o.NewBrick
	}
	return json.Marshal(toSerialize)
}

type NullableGlusterVolumeReplacebrick0 struct {
	value *GlusterVolumeReplacebrick0
	isSet bool
}

func (v NullableGlusterVolumeReplacebrick0) Get() *GlusterVolumeReplacebrick0 {
	return v.value
}

func (v *NullableGlusterVolumeReplacebrick0) Set(val *GlusterVolumeReplacebrick0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterVolumeReplacebrick0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterVolumeReplacebrick0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterVolumeReplacebrick0(val *GlusterVolumeReplacebrick0) *NullableGlusterVolumeReplacebrick0 {
	return &NullableGlusterVolumeReplacebrick0{value: val, isSet: true}
}

func (v NullableGlusterVolumeReplacebrick0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterVolumeReplacebrick0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
