/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// GlusterVolumeRemovebrick0 struct for GlusterVolumeRemovebrick0
type GlusterVolumeRemovebrick0 struct {
	// `name` String representing name of gluster volume
	Name *string `json:"name,omitempty"`
	// `bricks` List representing the brick paths     `peer_name` String representing IP or DNS name of the peer     `peer_path` String representing the full path of the brick
	Bricks []Brick `json:"bricks,omitempty"`
	// `operation` String representing the operation to be performed     `START` Start the removal of the brick(s)     `STOP` Stop the removal of the brick(s)     `COMMIT` Commit the removal of the brick(s)     `STATUS` Display status of the removal of the brick(s)     `FORCE` Force the removal of the brick(s)
	Operation *string `json:"operation,omitempty"`
	Replica   *int32  `json:"replica,omitempty"`
}

// NewGlusterVolumeRemovebrick0 instantiates a new GlusterVolumeRemovebrick0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterVolumeRemovebrick0() *GlusterVolumeRemovebrick0 {
	this := GlusterVolumeRemovebrick0{}
	return &this
}

// NewGlusterVolumeRemovebrick0WithDefaults instantiates a new GlusterVolumeRemovebrick0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterVolumeRemovebrick0WithDefaults() *GlusterVolumeRemovebrick0 {
	this := GlusterVolumeRemovebrick0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterVolumeRemovebrick0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeRemovebrick0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterVolumeRemovebrick0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterVolumeRemovebrick0) SetName(v string) {
	o.Name = &v
}

// GetBricks returns the Bricks field value if set, zero value otherwise.
func (o *GlusterVolumeRemovebrick0) GetBricks() []Brick {
	if o == nil || o.Bricks == nil {
		var ret []Brick
		return ret
	}
	return o.Bricks
}

// GetBricksOk returns a tuple with the Bricks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeRemovebrick0) GetBricksOk() ([]Brick, bool) {
	if o == nil || o.Bricks == nil {
		return nil, false
	}
	return o.Bricks, true
}

// HasBricks returns a boolean if a field has been set.
func (o *GlusterVolumeRemovebrick0) HasBricks() bool {
	if o != nil && o.Bricks != nil {
		return true
	}

	return false
}

// SetBricks gets a reference to the given []Brick and assigns it to the Bricks field.
func (o *GlusterVolumeRemovebrick0) SetBricks(v []Brick) {
	o.Bricks = v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *GlusterVolumeRemovebrick0) GetOperation() string {
	if o == nil || o.Operation == nil {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeRemovebrick0) GetOperationOk() (*string, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *GlusterVolumeRemovebrick0) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *GlusterVolumeRemovebrick0) SetOperation(v string) {
	o.Operation = &v
}

// GetReplica returns the Replica field value if set, zero value otherwise.
func (o *GlusterVolumeRemovebrick0) GetReplica() int32 {
	if o == nil || o.Replica == nil {
		var ret int32
		return ret
	}
	return *o.Replica
}

// GetReplicaOk returns a tuple with the Replica field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeRemovebrick0) GetReplicaOk() (*int32, bool) {
	if o == nil || o.Replica == nil {
		return nil, false
	}
	return o.Replica, true
}

// HasReplica returns a boolean if a field has been set.
func (o *GlusterVolumeRemovebrick0) HasReplica() bool {
	if o != nil && o.Replica != nil {
		return true
	}

	return false
}

// SetReplica gets a reference to the given int32 and assigns it to the Replica field.
func (o *GlusterVolumeRemovebrick0) SetReplica(v int32) {
	o.Replica = &v
}

func (o GlusterVolumeRemovebrick0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Bricks != nil {
		toSerialize["bricks"] = o.Bricks
	}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	if o.Replica != nil {
		toSerialize["replica"] = o.Replica
	}
	return json.Marshal(toSerialize)
}

type NullableGlusterVolumeRemovebrick0 struct {
	value *GlusterVolumeRemovebrick0
	isSet bool
}

func (v NullableGlusterVolumeRemovebrick0) Get() *GlusterVolumeRemovebrick0 {
	return v.value
}

func (v *NullableGlusterVolumeRemovebrick0) Set(val *GlusterVolumeRemovebrick0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterVolumeRemovebrick0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterVolumeRemovebrick0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterVolumeRemovebrick0(val *GlusterVolumeRemovebrick0) *NullableGlusterVolumeRemovebrick0 {
	return &NullableGlusterVolumeRemovebrick0{value: val, isSet: true}
}

func (v NullableGlusterVolumeRemovebrick0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterVolumeRemovebrick0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
