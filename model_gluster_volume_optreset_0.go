/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// GlusterVolumeOptreset0 struct for GlusterVolumeOptreset0
type GlusterVolumeOptreset0 struct {
	// `name` String representing name of gluster volume
	Name *string `json:"name,omitempty"`
	// Reset volumes options.     If `opt` is not provided, then all options     will be reset. `opt` String representing name of the option to reset
	Opt   *string `json:"opt,omitempty"`
	Force *bool   `json:"force,omitempty"`
}

// NewGlusterVolumeOptreset0 instantiates a new GlusterVolumeOptreset0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlusterVolumeOptreset0() *GlusterVolumeOptreset0 {
	this := GlusterVolumeOptreset0{}
	return &this
}

// NewGlusterVolumeOptreset0WithDefaults instantiates a new GlusterVolumeOptreset0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlusterVolumeOptreset0WithDefaults() *GlusterVolumeOptreset0 {
	this := GlusterVolumeOptreset0{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GlusterVolumeOptreset0) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeOptreset0) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GlusterVolumeOptreset0) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GlusterVolumeOptreset0) SetName(v string) {
	o.Name = &v
}

// GetOpt returns the Opt field value if set, zero value otherwise.
func (o *GlusterVolumeOptreset0) GetOpt() string {
	if o == nil || o.Opt == nil {
		var ret string
		return ret
	}
	return *o.Opt
}

// GetOptOk returns a tuple with the Opt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeOptreset0) GetOptOk() (*string, bool) {
	if o == nil || o.Opt == nil {
		return nil, false
	}
	return o.Opt, true
}

// HasOpt returns a boolean if a field has been set.
func (o *GlusterVolumeOptreset0) HasOpt() bool {
	if o != nil && o.Opt != nil {
		return true
	}

	return false
}

// SetOpt gets a reference to the given string and assigns it to the Opt field.
func (o *GlusterVolumeOptreset0) SetOpt(v string) {
	o.Opt = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *GlusterVolumeOptreset0) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlusterVolumeOptreset0) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *GlusterVolumeOptreset0) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *GlusterVolumeOptreset0) SetForce(v bool) {
	o.Force = &v
}

func (o GlusterVolumeOptreset0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Opt != nil {
		toSerialize["opt"] = o.Opt
	}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	return json.Marshal(toSerialize)
}

type NullableGlusterVolumeOptreset0 struct {
	value *GlusterVolumeOptreset0
	isSet bool
}

func (v NullableGlusterVolumeOptreset0) Get() *GlusterVolumeOptreset0 {
	return v.value
}

func (v *NullableGlusterVolumeOptreset0) Set(val *GlusterVolumeOptreset0) {
	v.value = val
	v.isSet = true
}

func (v NullableGlusterVolumeOptreset0) IsSet() bool {
	return v.isSet
}

func (v *NullableGlusterVolumeOptreset0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlusterVolumeOptreset0(val *GlusterVolumeOptreset0) *NullableGlusterVolumeOptreset0 {
	return &NullableGlusterVolumeOptreset0{value: val, isSet: true}
}

func (v NullableGlusterVolumeOptreset0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlusterVolumeOptreset0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
