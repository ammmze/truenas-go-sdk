/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// CloudSyncBwlimit struct for CloudSyncBwlimit
type CloudSyncBwlimit struct {
	Time      *string       `json:"time,omitempty"`
	Bandwidth NullableInt32 `json:"bandwidth,omitempty"`
}

// NewCloudSyncBwlimit instantiates a new CloudSyncBwlimit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudSyncBwlimit() *CloudSyncBwlimit {
	this := CloudSyncBwlimit{}
	return &this
}

// NewCloudSyncBwlimitWithDefaults instantiates a new CloudSyncBwlimit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudSyncBwlimitWithDefaults() *CloudSyncBwlimit {
	this := CloudSyncBwlimit{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *CloudSyncBwlimit) GetTime() string {
	if o == nil || o.Time == nil {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSyncBwlimit) GetTimeOk() (*string, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *CloudSyncBwlimit) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *CloudSyncBwlimit) SetTime(v string) {
	o.Time = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudSyncBwlimit) GetBandwidth() int32 {
	if o == nil || o.Bandwidth.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Bandwidth.Get()
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudSyncBwlimit) GetBandwidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bandwidth.Get(), o.Bandwidth.IsSet()
}

// HasBandwidth returns a boolean if a field has been set.
func (o *CloudSyncBwlimit) HasBandwidth() bool {
	if o != nil && o.Bandwidth.IsSet() {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given NullableInt32 and assigns it to the Bandwidth field.
func (o *CloudSyncBwlimit) SetBandwidth(v int32) {
	o.Bandwidth.Set(&v)
}

// SetBandwidthNil sets the value for Bandwidth to be an explicit nil
func (o *CloudSyncBwlimit) SetBandwidthNil() {
	o.Bandwidth.Set(nil)
}

// UnsetBandwidth ensures that no value is present for Bandwidth, not even an explicit nil
func (o *CloudSyncBwlimit) UnsetBandwidth() {
	o.Bandwidth.Unset()
}

func (o CloudSyncBwlimit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Bandwidth.IsSet() {
		toSerialize["bandwidth"] = o.Bandwidth.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCloudSyncBwlimit struct {
	value *CloudSyncBwlimit
	isSet bool
}

func (v NullableCloudSyncBwlimit) Get() *CloudSyncBwlimit {
	return v.value
}

func (v *NullableCloudSyncBwlimit) Set(val *CloudSyncBwlimit) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudSyncBwlimit) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudSyncBwlimit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudSyncBwlimit(val *CloudSyncBwlimit) *NullableCloudSyncBwlimit {
	return &NullableCloudSyncBwlimit{value: val, isSet: true}
}

func (v NullableCloudSyncBwlimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudSyncBwlimit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
