/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// Flags struct for Flags
type Flags struct {
	FILE_INHERIT         *bool   `json:"FILE_INHERIT,omitempty"`
	DIRECTORY_INHERIT    *bool   `json:"DIRECTORY_INHERIT,omitempty"`
	NO_PROPAGATE_INHERIT *bool   `json:"NO_PROPAGATE_INHERIT,omitempty"`
	INHERIT_ONLY         *bool   `json:"INHERIT_ONLY,omitempty"`
	INHERITED            *bool   `json:"INHERITED,omitempty"`
	BASIC                *string `json:"BASIC,omitempty"`
}

// NewFlags instantiates a new Flags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlags() *Flags {
	this := Flags{}
	return &this
}

// NewFlagsWithDefaults instantiates a new Flags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagsWithDefaults() *Flags {
	this := Flags{}
	return &this
}

// GetFILE_INHERIT returns the FILE_INHERIT field value if set, zero value otherwise.
func (o *Flags) GetFILE_INHERIT() bool {
	if o == nil || o.FILE_INHERIT == nil {
		var ret bool
		return ret
	}
	return *o.FILE_INHERIT
}

// GetFILE_INHERITOk returns a tuple with the FILE_INHERIT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetFILE_INHERITOk() (*bool, bool) {
	if o == nil || o.FILE_INHERIT == nil {
		return nil, false
	}
	return o.FILE_INHERIT, true
}

// HasFILE_INHERIT returns a boolean if a field has been set.
func (o *Flags) HasFILE_INHERIT() bool {
	if o != nil && o.FILE_INHERIT != nil {
		return true
	}

	return false
}

// SetFILE_INHERIT gets a reference to the given bool and assigns it to the FILE_INHERIT field.
func (o *Flags) SetFILE_INHERIT(v bool) {
	o.FILE_INHERIT = &v
}

// GetDIRECTORY_INHERIT returns the DIRECTORY_INHERIT field value if set, zero value otherwise.
func (o *Flags) GetDIRECTORY_INHERIT() bool {
	if o == nil || o.DIRECTORY_INHERIT == nil {
		var ret bool
		return ret
	}
	return *o.DIRECTORY_INHERIT
}

// GetDIRECTORY_INHERITOk returns a tuple with the DIRECTORY_INHERIT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetDIRECTORY_INHERITOk() (*bool, bool) {
	if o == nil || o.DIRECTORY_INHERIT == nil {
		return nil, false
	}
	return o.DIRECTORY_INHERIT, true
}

// HasDIRECTORY_INHERIT returns a boolean if a field has been set.
func (o *Flags) HasDIRECTORY_INHERIT() bool {
	if o != nil && o.DIRECTORY_INHERIT != nil {
		return true
	}

	return false
}

// SetDIRECTORY_INHERIT gets a reference to the given bool and assigns it to the DIRECTORY_INHERIT field.
func (o *Flags) SetDIRECTORY_INHERIT(v bool) {
	o.DIRECTORY_INHERIT = &v
}

// GetNO_PROPAGATE_INHERIT returns the NO_PROPAGATE_INHERIT field value if set, zero value otherwise.
func (o *Flags) GetNO_PROPAGATE_INHERIT() bool {
	if o == nil || o.NO_PROPAGATE_INHERIT == nil {
		var ret bool
		return ret
	}
	return *o.NO_PROPAGATE_INHERIT
}

// GetNO_PROPAGATE_INHERITOk returns a tuple with the NO_PROPAGATE_INHERIT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetNO_PROPAGATE_INHERITOk() (*bool, bool) {
	if o == nil || o.NO_PROPAGATE_INHERIT == nil {
		return nil, false
	}
	return o.NO_PROPAGATE_INHERIT, true
}

// HasNO_PROPAGATE_INHERIT returns a boolean if a field has been set.
func (o *Flags) HasNO_PROPAGATE_INHERIT() bool {
	if o != nil && o.NO_PROPAGATE_INHERIT != nil {
		return true
	}

	return false
}

// SetNO_PROPAGATE_INHERIT gets a reference to the given bool and assigns it to the NO_PROPAGATE_INHERIT field.
func (o *Flags) SetNO_PROPAGATE_INHERIT(v bool) {
	o.NO_PROPAGATE_INHERIT = &v
}

// GetINHERIT_ONLY returns the INHERIT_ONLY field value if set, zero value otherwise.
func (o *Flags) GetINHERIT_ONLY() bool {
	if o == nil || o.INHERIT_ONLY == nil {
		var ret bool
		return ret
	}
	return *o.INHERIT_ONLY
}

// GetINHERIT_ONLYOk returns a tuple with the INHERIT_ONLY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetINHERIT_ONLYOk() (*bool, bool) {
	if o == nil || o.INHERIT_ONLY == nil {
		return nil, false
	}
	return o.INHERIT_ONLY, true
}

// HasINHERIT_ONLY returns a boolean if a field has been set.
func (o *Flags) HasINHERIT_ONLY() bool {
	if o != nil && o.INHERIT_ONLY != nil {
		return true
	}

	return false
}

// SetINHERIT_ONLY gets a reference to the given bool and assigns it to the INHERIT_ONLY field.
func (o *Flags) SetINHERIT_ONLY(v bool) {
	o.INHERIT_ONLY = &v
}

// GetINHERITED returns the INHERITED field value if set, zero value otherwise.
func (o *Flags) GetINHERITED() bool {
	if o == nil || o.INHERITED == nil {
		var ret bool
		return ret
	}
	return *o.INHERITED
}

// GetINHERITEDOk returns a tuple with the INHERITED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetINHERITEDOk() (*bool, bool) {
	if o == nil || o.INHERITED == nil {
		return nil, false
	}
	return o.INHERITED, true
}

// HasINHERITED returns a boolean if a field has been set.
func (o *Flags) HasINHERITED() bool {
	if o != nil && o.INHERITED != nil {
		return true
	}

	return false
}

// SetINHERITED gets a reference to the given bool and assigns it to the INHERITED field.
func (o *Flags) SetINHERITED(v bool) {
	o.INHERITED = &v
}

// GetBASIC returns the BASIC field value if set, zero value otherwise.
func (o *Flags) GetBASIC() string {
	if o == nil || o.BASIC == nil {
		var ret string
		return ret
	}
	return *o.BASIC
}

// GetBASICOk returns a tuple with the BASIC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Flags) GetBASICOk() (*string, bool) {
	if o == nil || o.BASIC == nil {
		return nil, false
	}
	return o.BASIC, true
}

// HasBASIC returns a boolean if a field has been set.
func (o *Flags) HasBASIC() bool {
	if o != nil && o.BASIC != nil {
		return true
	}

	return false
}

// SetBASIC gets a reference to the given string and assigns it to the BASIC field.
func (o *Flags) SetBASIC(v string) {
	o.BASIC = &v
}

func (o Flags) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FILE_INHERIT != nil {
		toSerialize["FILE_INHERIT"] = o.FILE_INHERIT
	}
	if o.DIRECTORY_INHERIT != nil {
		toSerialize["DIRECTORY_INHERIT"] = o.DIRECTORY_INHERIT
	}
	if o.NO_PROPAGATE_INHERIT != nil {
		toSerialize["NO_PROPAGATE_INHERIT"] = o.NO_PROPAGATE_INHERIT
	}
	if o.INHERIT_ONLY != nil {
		toSerialize["INHERIT_ONLY"] = o.INHERIT_ONLY
	}
	if o.INHERITED != nil {
		toSerialize["INHERITED"] = o.INHERITED
	}
	if o.BASIC != nil {
		toSerialize["BASIC"] = o.BASIC
	}
	return json.Marshal(toSerialize)
}

type NullableFlags struct {
	value *Flags
	isSet bool
}

func (v NullableFlags) Get() *Flags {
	return v.value
}

func (v *NullableFlags) Set(val *Flags) {
	v.value = val
	v.isSet = true
}

func (v NullableFlags) IsSet() bool {
	return v.isSet
}

func (v *NullableFlags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlags(val *Flags) *NullableFlags {
	return &NullableFlags{value: val, isSet: true}
}

func (v NullableFlags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
