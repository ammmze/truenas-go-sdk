/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// IdmapRidOptions struct for IdmapRidOptions
type IdmapRidOptions struct {
	SssdCompat *bool `json:"sssd_compat,omitempty"`
}

// NewIdmapRidOptions instantiates a new IdmapRidOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdmapRidOptions() *IdmapRidOptions {
	this := IdmapRidOptions{}
	var sssdCompat bool = false
	this.SssdCompat = &sssdCompat
	return &this
}

// NewIdmapRidOptionsWithDefaults instantiates a new IdmapRidOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdmapRidOptionsWithDefaults() *IdmapRidOptions {
	this := IdmapRidOptions{}
	var sssdCompat bool = false
	this.SssdCompat = &sssdCompat
	return &this
}

// GetSssdCompat returns the SssdCompat field value if set, zero value otherwise.
func (o *IdmapRidOptions) GetSssdCompat() bool {
	if o == nil || o.SssdCompat == nil {
		var ret bool
		return ret
	}
	return *o.SssdCompat
}

// GetSssdCompatOk returns a tuple with the SssdCompat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapRidOptions) GetSssdCompatOk() (*bool, bool) {
	if o == nil || o.SssdCompat == nil {
		return nil, false
	}
	return o.SssdCompat, true
}

// HasSssdCompat returns a boolean if a field has been set.
func (o *IdmapRidOptions) HasSssdCompat() bool {
	if o != nil && o.SssdCompat != nil {
		return true
	}

	return false
}

// SetSssdCompat gets a reference to the given bool and assigns it to the SssdCompat field.
func (o *IdmapRidOptions) SetSssdCompat(v bool) {
	o.SssdCompat = &v
}

func (o IdmapRidOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SssdCompat != nil {
		toSerialize["sssd_compat"] = o.SssdCompat
	}
	return json.Marshal(toSerialize)
}

type NullableIdmapRidOptions struct {
	value *IdmapRidOptions
	isSet bool
}

func (v NullableIdmapRidOptions) Get() *IdmapRidOptions {
	return v.value
}

func (v *NullableIdmapRidOptions) Set(val *IdmapRidOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapRidOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapRidOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapRidOptions(val *IdmapRidOptions) *NullableIdmapRidOptions {
	return &NullableIdmapRidOptions{value: val, isSet: true}
}

func (v NullableIdmapRidOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapRidOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
