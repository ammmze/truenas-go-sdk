/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// SupportAttachTicket0 struct for SupportAttachTicket0
type SupportAttachTicket0 struct {
	Ticket   *int32  `json:"ticket,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Token    *string `json:"token,omitempty"`
}

// NewSupportAttachTicket0 instantiates a new SupportAttachTicket0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportAttachTicket0() *SupportAttachTicket0 {
	this := SupportAttachTicket0{}
	return &this
}

// NewSupportAttachTicket0WithDefaults instantiates a new SupportAttachTicket0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportAttachTicket0WithDefaults() *SupportAttachTicket0 {
	this := SupportAttachTicket0{}
	return &this
}

// GetTicket returns the Ticket field value if set, zero value otherwise.
func (o *SupportAttachTicket0) GetTicket() int32 {
	if o == nil || o.Ticket == nil {
		var ret int32
		return ret
	}
	return *o.Ticket
}

// GetTicketOk returns a tuple with the Ticket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportAttachTicket0) GetTicketOk() (*int32, bool) {
	if o == nil || o.Ticket == nil {
		return nil, false
	}
	return o.Ticket, true
}

// HasTicket returns a boolean if a field has been set.
func (o *SupportAttachTicket0) HasTicket() bool {
	if o != nil && o.Ticket != nil {
		return true
	}

	return false
}

// SetTicket gets a reference to the given int32 and assigns it to the Ticket field.
func (o *SupportAttachTicket0) SetTicket(v int32) {
	o.Ticket = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *SupportAttachTicket0) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportAttachTicket0) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *SupportAttachTicket0) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *SupportAttachTicket0) SetFilename(v string) {
	o.Filename = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SupportAttachTicket0) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportAttachTicket0) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SupportAttachTicket0) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SupportAttachTicket0) SetToken(v string) {
	o.Token = &v
}

func (o SupportAttachTicket0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ticket != nil {
		toSerialize["ticket"] = o.Ticket
	}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSupportAttachTicket0 struct {
	value *SupportAttachTicket0
	isSet bool
}

func (v NullableSupportAttachTicket0) Get() *SupportAttachTicket0 {
	return v.value
}

func (v *NullableSupportAttachTicket0) Set(val *SupportAttachTicket0) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportAttachTicket0) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportAttachTicket0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportAttachTicket0(val *SupportAttachTicket0) *NullableSupportAttachTicket0 {
	return &NullableSupportAttachTicket0{value: val, isSet: true}
}

func (v NullableSupportAttachTicket0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportAttachTicket0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
