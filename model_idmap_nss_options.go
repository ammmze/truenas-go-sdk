/*
TrueNAS RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package truenas

import (
	"encoding/json"
)

// IdmapNssOptions struct for IdmapNssOptions
type IdmapNssOptions struct {
	LinkedService *string `json:"linked_service,omitempty"`
}

// NewIdmapNssOptions instantiates a new IdmapNssOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdmapNssOptions() *IdmapNssOptions {
	this := IdmapNssOptions{}
	var linkedService string = "LOCAL_ACCOUNT"
	this.LinkedService = &linkedService
	return &this
}

// NewIdmapNssOptionsWithDefaults instantiates a new IdmapNssOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdmapNssOptionsWithDefaults() *IdmapNssOptions {
	this := IdmapNssOptions{}
	var linkedService string = "LOCAL_ACCOUNT"
	this.LinkedService = &linkedService
	return &this
}

// GetLinkedService returns the LinkedService field value if set, zero value otherwise.
func (o *IdmapNssOptions) GetLinkedService() string {
	if o == nil || o.LinkedService == nil {
		var ret string
		return ret
	}
	return *o.LinkedService
}

// GetLinkedServiceOk returns a tuple with the LinkedService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdmapNssOptions) GetLinkedServiceOk() (*string, bool) {
	if o == nil || o.LinkedService == nil {
		return nil, false
	}
	return o.LinkedService, true
}

// HasLinkedService returns a boolean if a field has been set.
func (o *IdmapNssOptions) HasLinkedService() bool {
	if o != nil && o.LinkedService != nil {
		return true
	}

	return false
}

// SetLinkedService gets a reference to the given string and assigns it to the LinkedService field.
func (o *IdmapNssOptions) SetLinkedService(v string) {
	o.LinkedService = &v
}

func (o IdmapNssOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkedService != nil {
		toSerialize["linked_service"] = o.LinkedService
	}
	return json.Marshal(toSerialize)
}

type NullableIdmapNssOptions struct {
	value *IdmapNssOptions
	isSet bool
}

func (v NullableIdmapNssOptions) Get() *IdmapNssOptions {
	return v.value
}

func (v *NullableIdmapNssOptions) Set(val *IdmapNssOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIdmapNssOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIdmapNssOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdmapNssOptions(val *IdmapNssOptions) *NullableIdmapNssOptions {
	return &NullableIdmapNssOptions{value: val, isSet: true}
}

func (v NullableIdmapNssOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdmapNssOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
